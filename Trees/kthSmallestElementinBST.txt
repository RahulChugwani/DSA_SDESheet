Problem Link:
https://leetcode.com/problems/kth-smallest-element-in-a-bst/

Given the root of a binary search tree, and an integer k, return the kth (1-indexed) smallest element in the tree.

Example 1:

Input: root = [3,1,4,null,2], k = 1
Output: 1

// Code:

class Solution {
public:
    int kthSmallest(TreeNode* root, int& k) {
        
        if( root == NULL)
            return -1;
        
        int left = kthSmallest(root->left, k);
        
        if(left != -1)
            return left;
        
        k--;
        if( k == 0)
            return root->val;
        
        return kthSmallest(root->right, k);
        
        
    }
};
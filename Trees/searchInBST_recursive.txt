// Problem Link:
https://leetcode.com/problems/search-in-a-binary-search-tree/


You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. 
If such a node does not exist, return null.

// Code:

class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        
        
        if(root == NULL)
            return NULL;
        
        if(root->val == val)
            return root;
        
        TreeNode* res = searchBST(root->left, val);
        if(res == NULL)
            res = searchBST(root->right, val);
        
        return res;
        
    }
};
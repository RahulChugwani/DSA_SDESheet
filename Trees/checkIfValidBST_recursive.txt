// Problem Link:
https://leetcode.com/problems/validate-binary-search-tree/


Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.

// Code:

class Solution {
private:
    TreeNode* prev = NULL;
public:
    bool isValidBSTUtil(TreeNode* root){
        
        if( root == NULL)
            return true;
        
        if( !isValidBSTUtil(root->left) )
            return false;
        
        if( prev!= NULL && prev->val >= root->val)
            return false;
        
        prev = root;
        
        return isValidBSTUtil(root->right);
        
    }
    bool isValidBST(TreeNode* root) {
        
        //TreeNode prev = NULL;
        return isValidBSTUtil(root);
    }
};
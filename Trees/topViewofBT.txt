Given below is a binary tree. The task is to print the top view of binary tree. 
Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6      7

Top view will be: 4 2 1 3 7
Note: Return nodes from leftmost node to rightmost node.





// Code:

class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    void topViewUtil(Node* root, int vlevel, int hlevel, map<int, pair<int, int>>& m ){
       
       if( root == NULL)
        return;
        
       if( m.find(vlevel) == m.end() || m[vlevel].second > hlevel)
            m[vlevel] = pair<int, int>{root->data, hlevel }; 
        
      topViewUtil( root->left, vlevel-1, hlevel+1, m);
      topViewUtil( root->right, vlevel+1, hlevel+1, m);
            
    }
    
    vector<int> topView(Node *root)
    {
        //Your code here
        map<int, pair<int, int>> m;
        
        int vlevel = 0;
        int hlevel = 0;
        vector<int> res;
        
        topViewUtil( root, vlevel, hlevel, m);
        
        map<int, pair<int, int>> ::iterator it;
        
        for(auto i = m.begin(); i!= m.end(); i++){
            res.push_back(i->second.first);
        }
        
        return res;    
    }

};